/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        colemak_switch: eng_colemak_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_1)) &to 0>;
            label = "ENG_COLEMAK_SWITCH";
        };

        ru_switch: ru_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 1>;
            label = " RU_SWITCH";
        };

        ua_switch: ua_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_3)) &to 1>;
            label = "UA_SWITCH";
        };

        win_sleep: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP_KEY";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };
    };

    behaviors {
        sleep_behavior: sleep_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "SLEEP_BEHAVIOR";
            bindings = <&win_sleep>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
        };

        D_bhv: D_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "D_BHV";
            bindings = <&kp D>, <&kp LC(V)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        T_bhv: T_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "T_BHV";
            bindings = <&kp T>, <&kp LC(F)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        R_bhv: R_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "R_BHV";
            bindings = <&kp R>, <&kp LC(S)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        S_bhv: S_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "S_BHV";
            bindings = <&kp S>, <&kp LC(D)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        P_bhv: P_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "P_BHV";
            bindings = <&kp P>, <&kp LC(R)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        B_bhv: B_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "B_BHV";
            bindings = <&kp B>, <&kp LC(T)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        V_bhv: V_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "V_BHV";
            bindings = <&kp V>, <&kp LC(B)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        F_bhv: F_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "F_BHV";
            bindings = <&kp F>, <&kp LC(E)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        K_bhv: K_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "K_BHV";
            bindings = <&kp K>, <&kp LC(N)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        M_bhv: M_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "M_BHV";
            bindings = <&kp M>, <&kp LC(H)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        J_bhv: J_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "J_BHV";
            bindings = <&kp J>, <&kp LC(Y)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        H_bhv: H_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "H_BHV";
            bindings = <&kp H>, <&kp LC(M)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        N_bhv: N_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "N_BHV";
            bindings = <&kp N>, <&kp LC(J)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        L_bhv: L_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "L_BHV";
            bindings = <&kp L>, <&kp LC(U)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        E_bhv: E_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "E_BHV";
            bindings = <&kp E>, <&kp LC(K)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        U_bhv: U_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BHV";
            bindings = <&kp U>, <&kp LC(I)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        I_bhv: I_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "I_BHV";
            bindings = <&kp I>, <&kp LC(L)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        Y_bhv: Y_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "Y_BHV";
            bindings = <&kp Y>, <&kp LC(O)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        O_bhv: O_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "O_BHV";
            bindings = <&kp O>, <&kp LC(SEMICOLON)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        semcol_bhv: semcol_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMCOL_BHV";
            bindings = <&kp SEMICOLON>, <&kp LC(P)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * .----------------------------------------------------------------------------------------------------------------------------------.
 * |  `   |   1  |   2  |   3  |   4  |   5  |                                              |   6  |   7  |   8  |   9  |   0  | PScr |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | ESC  |   Q  |   W  |   E  |   R  |   T  |                                              |   Y  |   U  |   I  |   O  |   P  |  \   |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Tab  |   A  |   S  |   D  |   F  |   G  |                                              |   H  |   J  |   K  |   L  |   ;  |  '   |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |      | Del  | PGDN  | | PGUP  | Home  |      |   N  |   M  |   ,  |   .  |   /  | Shift|
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Ctrl | Alt  | Meta | Alt  |             | Meta | Space| Lower | | Raise | Enter | RAlt |             | LEFT | DOWN | UP   | RIGHT|
 * .----------------------------------------------------------------------------------------------------------------------------------.
 */

            bindings = <
&kp UNDER         &kp N1          &kp N2        &kp N3  &kp N4  &kp N5                                                                            &kp N6  &kp N7  &kp N8     &kp N9          &kp N0           &kp PG_UP
&kp TAB           &kp Q           &kp W         &F_bhv  &P_bhv  &B_bhv                                                                            &J_bhv  &L_bhv  &U_bhv     &Y_bhv          &semcol_bhv      &kp PG_DN
&kp ESC           &kp A           &R_bhv        &S_bhv  &T_bhv  &kp G                                                                             &M_bhv  &N_bhv  &E_bhv     &I_bhv          &O_bhv           &kp SQT
&kp LEFT_CONTROL  &kp Z           &kp X         &kp C   &D_bhv  &V_bhv             &kp LEFT_ALT  &kp LEFT_META   &mo 6  &kp RIGHT_SHIFT           &K_bhv  &H_bhv  &kp COMMA  &kp DOT         &kp SLASH        &kp QUESTION
&mo 5             &kp DOWN_ARROW  &kp UP_ARROW  &mo 4                   &kp ENTER  &kp SPACE     &kp LEFT_SHIFT  &mo 3  &kp BSPC         &kp DEL                  &kp HOME   &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp END
            >;
        };

        qwerty_layer {
            bindings = <
&kp UNDER         &kp N1          &kp N2        &kp N3  &kp N4  &kp N5                                                                            &kp N6  &kp N7  &kp N8     &kp N9          &kp N0           &kp PG_UP
&kp TAB           &kp Q           &kp W         &kp E   &kp R   &kp T                                                                             &kp Y   &kp U   &kp I      &kp O           &kp P            &kp PAGE_DOWN
&kp ESC           &kp A           &kp S         &kp D   &kp F   &kp G                                                                             &kp H   &kp J   &kp K      &kp L           &kp SEMICOLON    &kp SINGLE_QUOTE
&kp LEFT_CONTROL  &kp Z           &kp X         &kp C   &kp V   &kp B              &kp LEFT_ALT  &kp LEFT_META   &mo 6  &kp RIGHT_SHIFT           &kp N   &kp M   &kp COMMA  &kp DOT         &kp SLASH        &kp QUESTION
&mo 5             &kp DOWN_ARROW  &kp UP_ARROW  &mo 4                   &kp ENTER  &kp SPACE     &kp LEFT_SHIFT  &mo 3  &kp BSPC         &kp DEL                  &kp HOME   &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp END
            >;
        };

        game_layer {
            bindings = <
&kp UNDER      &kp N1     &kp N2         &kp N3  &kp N4  &kp N5                                                                   &kp N6  &kp N7  &kp N8     &kp N9    &kp N0     &to 0
&kp TAB        &kp Q      &kp W          &kp E   &kp R   &kp T                                                                    &kp Y   &kp U   &kp I      &kp O     &kp P      &kp BSLH
&kp BACKSPACE  &kp A      &kp S          &kp D   &kp F   &kp G                                                                    &kp H   &kp J   &kp K      &kp L     &kp SEMI   &kp SQT
&kp LSHFT      &kp Z      &kp X          &kp C   &kp V   &kp B                 &kp DEL    &kp ESC  &mo 6  &kp LEFT_WIN            &kp N   &kp M   &kp COMMA  &kp DOT   &kp SLASH  &kp ENTER
&kp LCTRL      &kp SLASH  &kp BACKSLASH  &mo 7                   &kp LEFT_ALT  &kp SPACE  &mo 3    &mo 4  &kp BSPC      &kp RALT                  &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT
            >;
        };

        symbol_layer {
            bindings = <
&none   &none      &none     &none             &none              &none                                                         &none      &none           &none            &none     &none              &none
&none   &kp GRAVE  &kp LT    &kp GT            &kp MINUS          &kp PIPE                                                      &kp CARET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp DLLR  &kp BACKSLASH      &none
&none   &kp EXCL   &kp STAR  &kp SLASH         &kp EQUAL          &kp AMPS                                                      &kp HASH   &kp LPAR        &kp RPAR         &kp SEMI  &kp DOUBLE_QUOTES  &none
&none   &kp TILDE  &kp PLUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT          &none   &none   &none  &kp CAPS          &kp AT     &kp COLON       &kp COMMA        &kp DOT   &kp SINGLE_QUOTE   &kp AMPS
&trans  &trans     &trans    &trans                                            &trans  &trans  &trans  &none  &trans    &trans                             &trans           &trans    &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&none            &none                    &none       &none         &none            &none                                               &to 9  &none  &none   &none   &none   &to 2
&kp LA(TAB)      &none                    &none       &bt BT_SEL 1  &bt BT_SEL 0     &to 8                                               &none  &none  &none   &none   &none   &none
&kp LA(LS(TAB))  &none                    &ua_switch  &ru_switch    &colemak_switch  &none                                               &none  &none  &none   &none   &none   &none
&kp RA(F24)      &none                    &none       &none         &none            &none         &none  &none  &none   &none           &none  &none  &none   &none   &none   &none
&kp RA(F23)      &sleep_behavior 0 LG(L)  &none       &trans                                &none  &none  &none  &trans  &trans  &trans                &trans  &trans  &trans  &trans
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans           &trans           &trans           &trans           &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp KP_SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &trans
&to 5   &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans          &kp KP_NUM       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &trans
&to 0   &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans                                    &kp KP_NUMBER_0  &kp KP_DOT       &trans        &trans
            >;
        };

        f_layer {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6                                                   &kp F7               &kp F8      &kp F9        &kp F10       &kp F11     &kp F12
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18                                                  &kp F19              &kp F20     &kp F21       &kp F22       &kp F23     &kp F24
&none    &none    &none    &none    &none    &none                                                    &kp PRINTSCREEN      &kp C_PP    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &none
&none    &none    &none    &none    &none    &none            &trans  &trans  &trans  &trans          &kp LA(PRINTSCREEN)  &kp C_PREV  &kp C_RW      &kp C_FF      &kp C_NEXT  &none
&trans   &trans   &trans   &trans                     &trans  &trans  &trans  &trans  &trans  &trans                                   &trans        &trans        &trans      &trans
            >;
        };

        game_num_layer {
            bindings = <
&kp KP_NUM       &trans           &trans           &trans           &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&kp KP_SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS      &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS       &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SINGLE_QUOTE  &trans          &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans           &kp KP_NUMBER_0  &kp KP_DOT       &trans                                     &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans
            >;
        };

        ble_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5                                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4      &bt BT_SEL 5
&none         &none         &none         &none         &none         &none                                                   &none         &none         &none         &none              &none             &none
&none         &none         &none         &none         &none         &none                                                   &none         &none         &none         &none              &none             &to 0
&none         &none         &none         &none         &none         &none                &none  &none  &none  &none         &none         &none         &none         &none              &none             &none
&bt BT_CLR    &none         &none         &none                                     &none  &none  &none  &none  &none  &none                              &none         &ext_power EP_OFF  &ext_power EP_ON  &bt BT_CLR
            >;
        };

        layer_9 {
            bindings = <
&kp UNDER  &kp N1          &kp N2        &kp N3  &kp N4     &kp N5                                                              &kp N6  &kp N7  &kp N8    &kp N9          &kp N0           &to 0
&kp TAB    &kp W           &kp R         &kp K   &kp COMMA  &kp Q                                                               &kp O   &kp S   &kp Z     &kp APOS        &kp A            &trans
&kp ESC    &kp P           &kp D         &kp Y   &kp N      &kp L                                                               &kp B   &kp F   &kp J     &kp T           &kp C            &trans
&kp LCTRL  &kp SEMI        &kp G         &kp H   &kp V      &kp U              &kp LALT   &kp LGUI   &trans  &kp LSHFT          &kp X   &kp M   &kp E     &kp DOT         &kp I            &kp FSLH
&trans     &kp DOWN_ARROW  &kp UP_ARROW  &trans                     &kp ENTER  &kp SPACE  &kp LSHFT  &trans  &kp BSPC   &trans                  &kp HOME  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp END
            >;
        };
    };
};
